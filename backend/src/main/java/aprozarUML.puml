@startuml
abstract class AppUser{
-id:UUID
-String FirstName;
-String LastName;
-String email;
-String password;
-String Pasword;
-String BankAcount;
-Token;
-Role
}

class Product{
-id:Long;
-price:Double;
-quantity:int;
-productType:ProductType;
-provider;Seller;
}


class OrderItem{
-product:Product
-quantity:int

void increaseQuantity();
void decreaseQuantity();
}

class ShoppingCart{
-customer:Customer;
-orderItems:List<OrderItem>
-total:Double

void addItem(OrderItem orderItem);
void takeOutItem(OrderItem orderItem);
OrderItem findOrderItem(OrderItem orderItem);
void removeOrderItem(OrderItem item);
double getTotal()
}
interface AppUserRepository{}
interface ProductRepository{}

class AppUserService{
void create(Body);
void update(id,body);
void delete(id);
Entity getbyId(id);
List<Entity> getAll();
}

class ProductService{
void create(Body);
void update(id,body);
void delete(id);
Entity getbyId(id);
List<Entity> getAll();
}


class SellerController{
-SellerService:SellerService
-CustomerService:CustomerService

get()
post()
put()
delete()
}

Person--|>Customer
Person--|>Seller
SellerService--*SellerRepository
SellerRepository--*Seller
CustomerService--*CustomerRepository
CustomerRepository--*Customer
ProductService--*ProductRepository
ProductRepository--*Product
OrderItem--*Product
ShoppingCart--*OrderItem
CustomerService--*ShoppingCart
SellerService--*ProductService
SellerController--*SellerService
CustomerController--*CustomerService
@enduml